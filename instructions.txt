PROJECT: Creating "Quasar-OS" - A minimal Linux distribution using existing components

I'm working on Arch Linux and want to create "Quasar-OS", a minimal operating system by connecting these THREE EXISTING components:
1. Current Linux kernel (already compiled and working)
2. NetworkManager (already installed and functional) 
3. Pacman package manager (already configured with repositories)

OBJECTIVE: Build Quasar-OS with TWO PHASES using the EASIEST possible tools:
- LIVE PHASE: Bootable Quasar-OS ISO for testing and installation
- INSTALLER PHASE: Simple automated installer to deploy Quasar-OS to target systems

EASY TOOLS PHILOSOPHY:
- Use existing Arch tools (pacstrap, arch-chroot, makepkg)
- Prefer simple bash scripts over complex build systems
- Use standard utilities (rsync, cp, tar) for file operations
- Leverage existing configurations instead of creating new ones
- Minimal dependencies and straightforward workflows
- Clear, readable scripts with extensive comments

CURRENT SETUP:
- Host: Arch Linux system
- Kernel: /boot/vmlinuz-linux (current running kernel)
- NetworkManager: /usr/bin/NetworkManager (fully configured)
- Pacman: /usr/bin/pacman (with /etc/pacman.conf and mirrorlist)
- Available easy tools: pacstrap, arch-chroot, rsync, tar, xorriso, syslinux

QUASAR-OS REQUIREMENTS:
1. Create minimal rootfs using existing kernel (no compilation needed)
2. Simple copy of NetworkManager with dependencies using rsync
3. Easy integration of working Pacman using standard file operations
4. Build bootable Quasar-OS ISO using basic tools (xorriso/syslinux)
5. Include SIMPLE installer script with menu-driven interface
6. Target: under 300MB ISO, under 200MB installed Quasar-OS
7. Fast boot time with minimal services

EASY INSTALLER SPECIFICATIONS:
- Simple text-based menu using 'dialog' or basic bash menus
- One-command disk setup using simple partitioning
- Straightforward system copy using rsync/tar
- Easy bootloader setup using grub-install
- Basic user setup with simple prompts
- Network configuration copy using file operations
- Clear progress indicators and error messages
- Option for fully automated installation with single command

EASY LIVE SYSTEM:
- Boot straight to shell or simple menu
- NetworkManager auto-start with existing profiles
- Pacman ready to use with existing repositories
- SSH enabled for easy remote access
- Basic tools: nano, htop, wget, curl
- Simple system information display on boot

EASY BUILD TOOLS NEEDED:

1. **Simple Build Scripts (using easy tools):**

build-quasar.sh # Main build script with simple steps
copy-components.sh # Uses rsync to copy kernel/NetworkManager/Pacman
create-rootfs.sh # Uses pacstrap with minimal package list
make-iso.sh # Uses xorriso with simple commands


2. **Easy Installer Tools:**

quasar-installer.sh # Simple menu-driven installer
easy-partition.sh # Basic disk partitioning with sensible defaults
copy-system.sh # Simple rsync-based system copy
setup-boot.sh # Easy GRUB installation
configure-user.sh # Basic user/password setup


3. **Configuration Templates (easy to modify):**


quasar.conf # Main Quasar-OS configuration
packages.list # Simple text list of required packages
services.list # List of essential services to enable
grub-template.cfg # Basic GRUB configuration template



EASY INSTALLATION WORKFLOW:
1. Boot Quasar-OS ISO → Simple boot menu appears
2. Auto-login to live system → NetworkManager connects automatically
3. Run 'quasar-installer' → Simple menu with clear options
4. Choose installation type → Express (automatic) or Custom
5. Select target disk → Simple disk selection menu
6. Enter basic info → Username, password, hostname
7. Installation progress → Clear progress bar and status
8. Reboot to installed Quasar-OS → Ready to use

EASY TOOLS CONSTRAINTS:
- Use only standard Linux tools (no exotic dependencies)
- Prefer built-in Arch utilities over third-party tools
- Simple file operations (copy, move, extract)
- Basic text processing (sed, awk, grep)
- Standard compression (gzip, xz)
- Common bootloader tools (GRUB, syslinux)
- Minimal shell scripting (bash with clear logic)

DELIVERABLES:
- Complete set of easy-to-understand bash scripts
- Simple configuration files with comments
- Step-by-step build instructions
- Testing commands for VirtualBox/QEMU
- User documentation for Quasar-OS installation
- Troubleshooting guide with common solutions


TARGET:
- Quasar-OS ISO 
- Quasar-OS installed system
- QUASAR-OS installer interface
Please provide simple, well-commented bash scripts that use the easiest possible tools to create Quasar-OS from my existing Arch Linux components. Focus on clarity and simplicity over complexity.
